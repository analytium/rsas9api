% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_object.R
\name{find_object}
\alias{find_object}
\title{find_object}
\usage{
find_object(url, repositoryName = "Foundation", location = NULL,
  locationRecursive = TRUE, objectId = NULL, objectType = NULL,
  publicType = NULL, nameEquals = NULL, nameStarts = NULL,
  nameContains = NULL, nameRegex = NULL, descriptionContains = NULL,
  descriptionRegex = NULL, createdGt = NULL, createdLt = NULL,
  modifiedGt = NULL, modifiedLt = NULL, tableLibref = NULL,
  tableDBMS = NULL, includeAssociations = FALSE,
  includePermissions = FALSE, asDataFrame = FALSE)
}
\arguments{
\item{url}{URL of the server with installed SAS9API.}

\item{repositoryName}{Repository name.}

\item{location}{Folder location to search in.}

\item{locationRecursive}{logical. Defines whether search should be done in subfolders.}

\item{objectId}{SAS Metadata object ID.}

\item{objectType}{SAS Metadata object type.}

\item{publicType}{Comma-separated list of target PublicType attributes.}

\item{nameEquals}{Search criteria: name matches (case-insensitive).}

\item{nameStarts}{Search criteria: name starts with (case-insensitive).}

\item{nameContains}{Search criteria: name contains (case-insensitive).}

\item{nameRegex}{Search criteria: name matches regex.}

\item{descriptionContains}{Search criteria: description contains (case-insensitive).}

\item{descriptionRegex}{Search criteria: description matches regex.}

\item{createdGt}{Search criteria: MetadataCreated greater than (ISO datatime format).}

\item{createdLt}{Search criteria: MetadataCreated lower than (ISO datatime format).}

\item{modifiedGt}{Search criteria: MetadataModified greater than (ISO datatime format).}

\item{modifiedLt}{Search criteria: MetadataModified lower than (ISO datatime format).}

\item{tableLibref}{Search criteria: libref name for associated library object for a table. For table types only.}

\item{tableDBMS}{Search criteria: DBMS engine name for associated library object for a table. For table types only.}

\item{includeAssociations}{logical. Defines whether to include object associations in the search.}

\item{includePermissions}{logical. Defines whether to include metadata object permissions in the search.}

\item{asDataFrame}{logical. Determines the content of the response returned by the function. If FALSE, the function will return full JSON response. If TRUE, the function will return only payload part of the response transformed into a dataframe.}
}
\description{
Finds objects.
}
\examples{
find_object(url, nameStarts = "customer", nameContains = "group",
publicType = "Column", asDataFrame = TRUE)

}
