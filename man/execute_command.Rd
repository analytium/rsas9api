% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/execute_command.R
\name{execute_command}
\alias{execute_command}
\title{execute_command}
\usage{
execute_command(url = NULL, repositoryName = "Foundation",
  serverName = NULL, serverUrl = NULL, serverPort = NULL,
  logEnabled = TRUE, command, asDataFrame = FALSE)
}
\arguments{
\item{url}{URL of the server with installed SAS9API.}

\item{repositoryName}{Repository name.}

\item{serverName}{Workspace server name.}

\item{serverUrl}{Workspace server URL.}

\item{serverPort}{Workspace server port.}

\item{logEnabled}{logical. Enables log output in endpoint response.}

\item{command}{SAS command to execute.}

\item{asDataFrame}{logical. Determines the content of the response returned by the function. If FALSE, the function will return full JSON response. If TRUE, the function will return only payload part of the response transformed into a dataframe.}
}
\description{
Sends a SAS command to the workspace server for execution.
Workspace server can be connected either by server name or by server url with server port.
If none of these connections are provided, default workspace server from API configuration file will be used.
}
\examples{
execute_command(url, serverUrl, serverPort,
command = "proc print data=sashelp.class; run;", logEnabled = TRUE)

}
